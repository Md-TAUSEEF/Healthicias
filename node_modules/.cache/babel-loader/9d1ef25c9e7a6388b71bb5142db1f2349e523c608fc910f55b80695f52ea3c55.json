{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91725\\\\Downloads\\\\Healthicious-main\\\\Client\\\\src\\\\components\\\\Dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../Auth/Store_Token/Utils_Token';\nimport { NavLink } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [contacts, setContacts] = useState([]);\n  const {\n    Authorization\n  } = useAuth();\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/form/getall', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': Authorization\n          }\n        });\n        const data = await response.json();\n        setContacts(data.alluser);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchContacts();\n  }, [Authorization]);\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:5000/api/form/contact/delet/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization\n        }\n      });\n      setContacts(contacts.filter(contact => contact._id !== id));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const handleUpdate = async (id, newData) => {\n  //     try {\n  //         await fetch(`http://localhost:5000/api/form/users/update/${id}`, {\n  //             method: 'PUT',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //                 'Authorization': Authorization\n  //             },\n  //             body: JSON.stringify(newData)\n  //         });\n  //         setContacts(contacts.map(contact => (contact._id === id ? { ...contact, ...newData } : contact)));\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: contact.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), \" - \", contact.email, \" - \", contact.phone, \" - \", contact.msg, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(contact._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/update/:id\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, contact._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"IlTw2JiIKsb4e7vSz5CWBXu751Q=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","NavLink","useParams","jsxDEV","_jsxDEV","AdminDashboard","_s","id","contacts","setContacts","Authorization","fetchContacts","response","fetch","method","headers","data","json","alluser","error","console","handleDelete","filter","contact","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","username","email","phone","msg","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/91725/Downloads/Healthicious-main/Client/src/components/Dashboard/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../Auth/Store_Token/Utils_Token';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  const { id } = useParams();\r\n    const [contacts, setContacts] = useState([]);\r\n    const { Authorization } = useAuth(); \r\n\r\n    useEffect(() => {\r\n        const fetchContacts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/form/getall', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': Authorization\r\n                    }\r\n                });\r\n                const data = await response.json();\r\n                setContacts(data.alluser);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        fetchContacts();\r\n    }, [Authorization]);\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/api/form/contact/delet/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': Authorization\r\n                }\r\n            });\r\n            setContacts(contacts.filter(contact => contact._id !== id));\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // const handleUpdate = async (id, newData) => {\r\n    //     try {\r\n    //         await fetch(`http://localhost:5000/api/form/users/update/${id}`, {\r\n    //             method: 'PUT',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //                 'Authorization': Authorization\r\n    //             },\r\n    //             body: JSON.stringify(newData)\r\n    //         });\r\n    //         setContacts(contacts.map(contact => (contact._id === id ? { ...contact, ...newData } : contact)));\r\n    //     } catch (error) {\r\n    //         console.error(error);\r\n    //     }\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Contact List</h2>\r\n            <ul>\r\n                {contacts.map((contact) => (\r\n                    <li key={contact._id}>\r\n                        <strong>{contact.username}</strong> - {contact.email} - {contact.phone} - {contact.msg}\r\n                        <button onClick={() => handleDelete(contact._id)}>Delete</button>\r\n                        <NavLink to=\"/update/:id\">\r\n                        <button>Update</button>\r\n                        </NavLink>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}